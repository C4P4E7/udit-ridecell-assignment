name: Build, Push Docker Image
on:
  push:
    branches: [ "master" ]
env: 
  IMAGE_NAME: tech4mud/udit-ridecell-image
  GCP_PROJECT: ridecell-project
jobs:
  build-image: #phase 1
    runs-on: ubuntu-latest
    steps:
    - name: Build and push Docker image
      run: | 
        echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u tech4mud --password-stdin
        export GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-4)
        docker image build -t "${{ env.IMAGE_NAME }}":"$GITHUB_SHA_SHORT" .
        docker push "${{ env.IMAGE_NAME }}":"$GITHUB_SHA_SHORT"

      
  #Phase 2
  deploy-image:
    runs-on: ubuntu-latest
    steps: 
    - name: Deploy On GKE
    #this can be done using a custom helm chart but i'll use a simple kubectl deployment command
      run: | 
        export GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-4)
        gcloud auth activate-service-account --key-file "${{ secrets.GCP_SA_KEY }}" 
        gcloud config set project "${{ env.GCP_PROJECT }}" 
        gcloud config set compute/zone europe-west4-a
        gcloud container clusters get-credentials ${CLUSTER_NAME} --region europe-west4 --project "${{ env.GCP_PROJECT }}"
        kubectl create deployment ${DEPLOYMENT_NAME} --image ${IMAGE_NAME}:${GITHUB_SHA_SHORT} -n ${NAMESPACE}








      #       - gcloud auth activate-service-account --key-file ${GCP_SA_KEY}
      # - gcloud config set project eyekloud "${{ github.GITHUB_SHA }}"
      # - gcloud config set compute/zone europe-west4-a
      # - gcloud container clusters get-credentials eyekloud-prod-cluster --region europe-west4 --project eyekloud
      # - kubectl set image deployment/${DEPLOYMENT_NAME_PROD} eyekloud-frontend=${CONTAINER_IMAGE_PROD} -n ${NAMESPACE_PROD}

